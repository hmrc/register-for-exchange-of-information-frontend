#!/bin/bash

echo ""
echo "Applying migration WhatIsYourPostcode"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /whatIsYourPostcode                        controllers.WhatIsYourPostcodeController.onPageLoad(mode: models.Mode = models.NormalMode)" >> ../conf/app.routes
echo "POST       /whatIsYourPostcode                        controllers.WhatIsYourPostcodeController.onSubmit(mode: models.Mode = models.NormalMode)" >> ../conf/app.routes

echo "GET        /changeWhatIsYourPostcode                  controllers.WhatIsYourPostcodeController.onPageLoad(mode: models.Mode = models.CheckMode)" >> ../conf/app.routes
echo "POST       /changeWhatIsYourPostcode                  controllers.WhatIsYourPostcodeController.onSubmit(mode: models.Mode = models.CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "whatIsYourPostcode.title = whatIsYourPostcode" >> ../conf/messages.en
echo "whatIsYourPostcode.heading = whatIsYourPostcode" >> ../conf/messages.en
echo "whatIsYourPostcode.field1 = field1" >> ../conf/messages.en
echo "whatIsYourPostcode.field2 = field2" >> ../conf/messages.en
echo "whatIsYourPostcode.checkYourAnswersLabel = whatIsYourPostcode" >> ../conf/messages.en
echo "whatIsYourPostcode.error.field1.required = Enter field1" >> ../conf/messages.en
echo "whatIsYourPostcode.error.field2.required = Enter field2" >> ../conf/messages.en
echo "whatIsYourPostcode.error.field1.length = field1 must be 100 characters or less" >> ../conf/messages.en
echo "whatIsYourPostcode.error.field2.length = field2 must be 100 characters or less" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/trait UserAnswersEntryGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryWhatIsYourPostcodeUserAnswersEntry: Arbitrary[(pages.WhatIsYourPostcodePage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[pages.WhatIsYourPostcodePage.type]";\
    print "        value <- arbitrary[models.WhatIsYourPostcode].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryWhatIsYourPostcodePage: Arbitrary[pages.WhatIsYourPostcodePage.type] =";\
    print "    Arbitrary(pages.WhatIsYourPostcodePage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/trait ModelGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryWhatIsYourPostcode: Arbitrary[models.WhatIsYourPostcode] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        field1 <- arbitrary[String]";\
    print "        field2 <- arbitrary[String]";\
    print "      } yield models.WhatIsYourPostcode(field1, field2)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(WhatIsYourPostcodePage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Adding helper method to CheckYourAnswersHelper"
awk '/extends RowBuilder/ {\
     print;\
     print "";\
     print "  def whatIsYourPostcode: Option[Row] = userAnswers.get(pages.WhatIsYourPostcodePage) map {";\
     print "      answer =>";\
     print "        toRow(";\
     print "          msgKey = \"whatIsYourPostcode\",";\
     print "          value = msg\"site.edit\",";\
     print "          href = routes.WhatIsYourPostcodeController.onPageLoad(CheckMode).url,";\
     print "        )";\
     print "    }";\
     next }1' ../app/utils/CheckYourAnswersHelper.scala > tmp && mv tmp ../app/utils/CheckYourAnswersHelper.scala

echo "Moving tests"
mv ../generated-test/controllers/WhatIsYourPostcodeControllerSpec.scala ../test/controllers/
mv ../generated-test/forms/WhatIsYourPostcodeFormProviderSpec.scala ../test/forms/
mv ../generated-test/pages/WhatIsYourPostcodePageSpec.scala ../test/pages/

echo "Migration WhatIsYourPostcode completed"
