#!/bin/bash

echo ""
echo "Applying migration IndividualContactEmail"

echo "Adding routes to conf/app.routes"

echo "" >> ../conf/app.routes
echo "GET        /individualContactEmail                        controllers.IndividualContactEmailController.onPageLoad(mode: models.Mode = models.NormalMode)" >> ../conf/app.routes
echo "POST       /individualContactEmail                        controllers.IndividualContactEmailController.onSubmit(mode: models.Mode = models.NormalMode)" >> ../conf/app.routes

echo "GET        /changeIndividualContactEmail                  controllers.IndividualContactEmailController.onPageLoad(mode: models.Mode = models.CheckMode)" >> ../conf/app.routes
echo "POST       /changeIndividualContactEmail                  controllers.IndividualContactEmailController.onSubmit(mode: models.Mode = models.CheckMode)" >> ../conf/app.routes

echo "Adding messages to conf.messages"
echo "" >> ../conf/messages.en
echo "individualContactEmail.title = individualContactEmail" >> ../conf/messages.en
echo "individualContactEmail.heading = individualContactEmail" >> ../conf/messages.en
echo "individualContactEmail.email = email" >> ../conf/messages.en
echo "individualContactEmail.field2 = field2" >> ../conf/messages.en
echo "individualContactEmail.checkYourAnswersLabel = individualContactEmail" >> ../conf/messages.en
echo "individualContactEmail.error.email.required = Enter email" >> ../conf/messages.en
echo "individualContactEmail.error.field2.required = Enter field2" >> ../conf/messages.en
echo "individualContactEmail.error.email.length = email must be 100 characters or less" >> ../conf/messages.en
echo "individualContactEmail.error.field2.length = field2 must be 100 characters or less" >> ../conf/messages.en

echo "Adding to UserAnswersEntryGenerators"
awk '/trait UserAnswersEntryGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryIndividualContactEmailUserAnswersEntry: Arbitrary[(pages.IndividualContactEmailPage.type, JsValue)] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        page  <- arbitrary[pages.IndividualContactEmailPage.type]";\
    print "        value <- arbitrary[models.IndividualContactEmail].map(Json.toJson(_))";\
    print "      } yield (page, value)";\
    print "    }";\
    next }1' ../test/generators/UserAnswersEntryGenerators.scala > tmp && mv tmp ../test/generators/UserAnswersEntryGenerators.scala

echo "Adding to PageGenerators"
awk '/trait PageGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryIndividualContactEmailPage: Arbitrary[pages.IndividualContactEmailPage.type] =";\
    print "    Arbitrary(pages.IndividualContactEmailPage)";\
    next }1' ../test/generators/PageGenerators.scala > tmp && mv tmp ../test/generators/PageGenerators.scala

echo "Adding to ModelGenerators"
awk '/trait ModelGenerators/ {\
    print;\
    print "";\
    print "  implicit lazy val arbitraryIndividualContactEmail: Arbitrary[models.IndividualContactEmail] =";\
    print "    Arbitrary {";\
    print "      for {";\
    print "        email <- arbitrary[String]";\
    print "        field2 <- arbitrary[String]";\
    print "      } yield models.IndividualContactEmail(email, field2)";\
    print "    }";\
    next }1' ../test/generators/ModelGenerators.scala > tmp && mv tmp ../test/generators/ModelGenerators.scala

echo "Adding to UserAnswersGenerator"
awk '/val generators/ {\
    print;\
    print "    arbitrary[(IndividualContactEmailPage.type, JsValue)] ::";\
    next }1' ../test/generators/UserAnswersGenerator.scala > tmp && mv tmp ../test/generators/UserAnswersGenerator.scala

echo "Adding helper method to CheckYourAnswersHelper"
awk '/extends RowBuilder/ {\
     print;\
     print "";\
     print "  def individualContactEmail: Option[Row] = userAnswers.get(pages.IndividualContactEmailPage) map {";\
     print "      answer =>";\
     print "        toRow(";\
     print "          msgKey = \"individualContactEmail\",";\
     print "          value = msg\"site.edit\",";\
     print "          href = routes.IndividualContactEmailController.onPageLoad(CheckMode).url,";\
     print "        )";\
     print "    }";\
     next }1' ../app/utils/CheckYourAnswersHelper.scala > tmp && mv tmp ../app/utils/CheckYourAnswersHelper.scala

echo "Moving tests"
mv ../generated-test/controllers/IndividualContactEmailControllerSpec.scala ../test/controllers/
mv ../generated-test/forms/IndividualContactEmailFormProviderSpec.scala ../test/forms/
mv ../generated-test/pages/IndividualContactEmailPageSpec.scala ../test/pages/

echo "Migration IndividualContactEmail completed"
